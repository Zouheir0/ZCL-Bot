<<<<<<< HEAD:dashboard.ejs
<!DOCTYPE html>
<html>
<head>
  <title>Dashboard for <%= guildId %></title>
  <style>
    body { font-family: Arial, sans-serif; background: #1e1e2f; color: white; padding: 20px; }
    input, textarea { width: 100%; padding: 10px; margin: 10px 0; border-radius: 5px; border: none; }
    label { font-weight: bold; }
    button { padding: 10px 20px; background: #2ecc71; border: none; color: white; border-radius: 5px; cursor: pointer; }
  </style>
</head>
<body>
  <h1>Dashboard for Server ID: <%= guildId %></h1>
  <form method="POST">
    <label>Level Multiplier</label>
    <input name="multiplier" type="number" step="0.1" value="<%= settings.multiplier %>">

    <label>Credits Per Message</label>
    <input name="creditsPerMsg" type="number" value="<%= settings.creditsPerMsg %>">

    <label>Level Rewards (separate by comma, e.g. crate:common,credits:100)</label>
    <textarea name="levelRewards"><%= settings.levelRewards %></textarea>

    <label>Crate Configuration (JSON format)</label>
    <textarea name="crateData"><%= JSON.stringify(settings.crates, null, 2) %></textarea>

    <button type="submit">Save Settings</button>
  </form>
</body>
=======
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Dashboard</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      background: #0d1117;
      color: #e6edf3;
    }

    header {
      background: #161b22;
      padding: 1rem 2rem;
      font-size: 1.8rem;
      font-weight: 600;
      text-align: center;
      border-bottom: 2px solid #30363d;
    }

    .section {
      padding: 2rem;
      border-bottom: 1px solid #2f3a48;
    }

    .section h2 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      border-bottom: 1px solid #444;
      padding-bottom: 0.5rem;
    }

    .input-group {
      margin: 1rem 0;
    }

    .input-group label {
      display: block;
      margin-bottom: 0.2rem;
      font-weight: bold;
    }

    .input-group input {
      width: 100%;
      padding: 0.5rem;
      border-radius: 6px;
      border: none;
      background: #21262d;
      color: #fff;
    }

    .crate-list {
      display: grid;
      gap: 1rem;
    }

    .crate-card {
      padding: 1rem;
      background: #161b22;
      border: 1px solid #30363d;
      border-radius: 10px;
      transition: all 0.2s ease;
    }

    .crate-card:hover {
      transform: scale(1.02);
      cursor: pointer;
      border-color: #58a6ff;
    }

    .btn {
      background: #238636;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      font-weight: bold;
      margin-top: 1rem;
      cursor: pointer;
    }

    .btn:hover {
      background: #2ea043;
    }
  </style>
</head>
<body>

<header>Discord Bot Dashboard</header>

<div class="section" id="settings">
  <h2>Settings</h2>
  <div class="input-group">
    <label for="creditsPerMsg">Credits per Message</label>
    <input type="number" id="creditsPerMsg" value="10">
  </div>
  <div class="input-group">
    <label for="xpPerMsg">XP per Message</label>
    <input type="number" id="xpPerMsg" value="5">
  </div>
  <div class="input-group">
    <label for="levelMultiplier">Level Multiplier</label>
    <input type="number" id="levelMultiplier" step="0.1" value="1.0">
  </div>
</div>

<div class="section" id="crates">
  <h2>Crates</h2>
  <div class="crate-list" id="crateList">
    <!-- Crates go here -->
  </div>
  <button class="btn" onclick="createCrate()">+ Create Crate</button>
</div>

<script>
  const crateList = document.getElementById('crateList');

  let crates = [
    {
      name: "Legendary",
      rarity: "Legendary",
      items: [
        { name: "Golden Sword", rarity: "Epic" },
        { name: "Magic Orb", rarity: "Legendary" }
      ]
    },
    {
      name: "Rare",
      rarity: "Rare",
      items: [
        { name: "Silver Helmet", rarity: "Rare" },
        { name: "Steel Dagger", rarity: "Uncommon" }
      ]
    }
  ];

  function renderCrates() {
    crateList.innerHTML = "";
    crates.forEach((crate, index) => {
      const card = document.createElement("div");
      card.className = "crate-card";
      card.innerHTML = `
        <strong>${crate.name}</strong> (${crate.rarity})<br>
        <div class="crate-items">
          ${crate.items.map(item => `<div class="crate-item">${item.name} - ${item.rarity}</div>`).join("")}
        </div>
      `;
      card.onclick = () => editCrate(index);
      crateList.appendChild(card);
    });
  }

  function editCrate(index) {
    const crate = crates[index];
    const newName = prompt("Edit Crate Name:", crate.name);
    const newRarity = prompt("Edit Crate Rarity:", crate.rarity);
    if (newName && newRarity) {
      crate.name = newName;
      crate.rarity = newRarity;
      const addItem = confirm("Do you want to add an item?");
      if (addItem) {
        const itemName = prompt("Item Name:");
        const itemRarity = prompt("Item Rarity:");
        if (itemName && itemRarity) {
          crate.items.push({ name: itemName, rarity: itemRarity });
        }
      }
      renderCrates();
    }
  }

  function createCrate() {
    const name = prompt("Crate Name:");
    const rarity = prompt("Crate Rarity:");
    if (name && rarity) {
      const newCrate = { name, rarity, items: [] };
      let addMore = true;
      while (addMore) {
        const itemName = prompt("Item Name (or leave empty to stop):");
        if (!itemName) break;
        const itemRarity = prompt("Item Rarity:");
        newCrate.items.push({ name: itemName, rarity: itemRarity });
      }
      crates.push(newCrate);
      renderCrates();
    }
  }

  renderCrates();
</script>

</body>
>>>>>>> 693a26c (E):views/dashboard.ejs
</html>